<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- 本配置文件是工名为mvc-dispatcher的DispatcherServlet使用， 提供其相关的Spring MVC配置 -->

	<!-- 启用Spring基于annotation的DI, 使用户可以在Spring MVC中使用Spring的强大功能。 激活 @Required 
		@Autowired,JSR 250's @PostConstruct, @PreDestroy and @Resource 等标注 -->
	<context:annotation-config />
	<context:component-scan base-package="org.wg.carbooking" />

	<!-- Spring MVC配置 -->
	<mvc:annotation-driven>
		<!-- mvc:message-converters register-defaults="true">
			<bean class="org.beetl.json.ext.BeetlJsonHttpMessageConverter">
				<property name="supportedMediaTypes">
					<list>
						<value>text/html;charset=UTF-8</value>
						<value>text/json;charset=UTF-8</value>
						<value>application/json;charset=UTF-8</value>
					</list>
				</property>
				<property name="policys">
					<map>
						<entry key="~L/java.lang.String/" value="!quote" />
						<entry key="~d" value="f/yyyy-MM-dd HH:mm:ss/" />
						<entry key="~c" value="?null->[]" />
					</map>
				</property>
			</bean>
		</mvc:message-converters> -->
	</mvc:annotation-driven>

	<!-- 静态资源处理， css， js， imgs -->
	<mvc:resources mapping="/resources/**" location="/resources/" />
	<!-- 静态资源处理， ueditor编辑器上传的图片等资源 -->
	<mvc:resources mapping="/ueditor/**" location="/ueditor/" />

	<!-- 第一个GroupTemplate，模板放在Webapp下 -->
	<bean name="beetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration"
		init-method="init">
		<property name="configFileResource" value="/WEB-INF/beetl.properties" />
	</bean>

	<bean name="cmsbeetlConfig" class="org.beetl.ext.spring.BeetlGroupUtilConfiguration"
		init-method="init">
		<property name="configFileResource" value="/WEB-INF/cms-beetl.properties" />
	</bean>

	<!-- Beetl视图解析器1 -->
	<bean name="beetlViewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<!-- 多视图解析器，需要设置viewNames和order -->
		<property name="viewNames">
			<list>
				<value>/template/**</value>
			</list>
		</property>
		<property name="suffix" value=".btl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="0" />
		<!-- 多GroupTemplate，需要指定使用的bean -->
		<property name="config" ref="beetlConfig" />


	</bean>

	<!-- Beetl视图解析器2 -->
	<bean name="cmsBeetlViewResolver" class="org.beetl.ext.spring.BeetlSpringViewResolver">
		<!-- 多视图解析器，需要设置viewNames和order -->
		<property name="viewNames">
			<list>
				<value>/admin/**</value>
			</list>
		</property>
		<property name="suffix" value=".btl" />
		<property name="contentType" value="text/html;charset=UTF-8" />
		<property name="order" value="1" />
		<!-- 多GroupTemplate，需要指定使用的bean -->
		<property name="config" ref="cmsbeetlConfig" />
	</bean>
	
	<!-- 配置ViewResolver。 可以用多个ViewResolver。 使用order属性排序。 InternalResourceViewResolver放在最后。 -->
	<bean
		class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<property name="order" value="1" />
		<property name="mediaTypes">
			<map>
				<entry key="json" value="application/json" />
				<entry key="xml" value="application/xml" />
				<entry key="htm" value="text/html" />
			</map>
		</property>

		<property name="defaultViews">
			<list>
				<!-- JSON View -->
				<bean
					class="org.springframework.web.servlet.view.json.MappingJackson2JsonView">
				</bean>
			</list>
		</property>
		<property name="ignoreAcceptHeader" value="true" />
	</bean>

	<!-- JSP视图解析器 -->
	<bean name="JSPViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 注意JSP的这个视图解析器order必须在最后 -->
		<property name="order" value="256" />
		<property name="prefix" value="/WEB-INF/" />
		<property name="suffix" value=".jsp" />
		<property name="contentType" value="text/html;charset=UTF-8" />
	</bean>

	<!--2*1024*1024即2M resolveLazily属性启用是为了推迟文件解析，以便捕获文件大小异常 -->
	<bean
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver"
		id="multipartResolver">
		<property value="2097152" name="maxUploadSize" />
		<property value="UTF-8" name="defaultEncoding" />
		<property value="true" name="resolveLazily" />
	</bean>
</beans>